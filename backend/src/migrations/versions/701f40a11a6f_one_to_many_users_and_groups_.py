"""one-to-many users and groups relationship

Revision ID: 701f40a11a6f
Revises: b532e3a6ba02
Create Date: 2025-09-30 16:09:30.099050

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '701f40a11a6f'
down_revision: Union[str, Sequence[str], None] = 'b532e3a6ba02'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_groups')
    op.add_column('users', sa.Column('group_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'groups', ['group_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'group_id')
    op.create_table('user_groups',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('user_groups_group_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_groups_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'group_id', name=op.f('user_groups_pkey'))
    )
    # ### end Alembic commands ###
